<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnNuevo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAD4AAAA+CAYAAABzwahEAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABJFJREFUaEPtmG9sE2Ucxxf/JJL4xn8v9A2G8IoXviEkRInN3bV3FafZC6bgcE5N
        JkuIZKJYUBjDauZkLb7zz7a7tlekk00ER2CIQzK2dtFIBm8QE+LIgrgJ3dpurbg9Pnd7elvvnrLb3T3a
        keebfN78ctx9P336XJ9RRkNDoyU4MPV4YHBqRakg9oL7UDWyOZDIJg8M5kDJ8NPf61A1sqHipQIVJxwq
        XipQccKh4qUCFSccKq7jnRNJsClyTaVlIKvO3v8+pc3sUHt41PA8jf9bfCMs+OiOIZWPz02qs9rOUW1m
        hzXNvxmep0HFCaeY+P54FjRBYYVgYnYWmDezQ3P/lOF5GvTlRjjFxHefToEtXWMqLXClldm+MxltZof6
        7qTheRp0jxMOFdfReCYN6o/dVAkkZr/q/rOT2swOvpPjhudp0Jcb4RQTV1bX1zOukl/xpr65mR32wBen
        /nkadI8TDhXXsatnAtQcuq6inNiU2d4f0trMDluP/GV4ngZ9uREOFdfh5B5fvusi2CCN3P6Pkzx3irjy
        Ivvgx0zBvQPxNNh5uh/UdUvgtW+DoKprL6g50gy2fNcGXuravY//kn8Q1SOXYuJvHr0BnvlsWGX/wOxK
        vXsiqc3MoHx4+TOAwkfnroKab5qBEK4AnCQURxRuQU56RM9TqKbz+S/2eCCRAW8c+wK4Q8/iRW+HyHd5
        27yPoLrOhbT4JwNj4MWOt/FSpuGvsJL3CVTZmZAUb4mPg4pDtRiRxcNKQpJt865Cte2HlHhwMAuqOvdg
        JfKEzkfAVxdiBVQdrsZeqyIKl7kQ9xCqbi+kxLefOo4vP490Lg302Xb8Ley1c/CtqLq9kBBvSaRAeXQz
        pnQhVsRZkf/Hka88CfHtPQuvtoK1FVfgRVTfekiIL7S381gWF/nRyo7Ku5GCtTgtHoS/2XzouYKi5XIF
        CPR/aiB7K4t05xK70GG4rrrz1YL7KTDt/JNIwXzWxmaWrYsmH1AIxHPDgcHsTafw9/0+ri+56euXkZa1
        fHi2qeB+KiHPK0jHfBg542ejGUACTv7FUJKEuFvkfUjHfJho2ocr7QScHDeUJLLiktCIdMyHiWbqcKUd
        Qb5kKElGnK9DOubDHJx8AVvaEf40lKyMbQSXxn41MD0zjdTmMpy8arjOd+o9wz0ZSXge6ZgPG5lYhS/t
        DFzI3Pnc6s+ZcoixdHR19YJ7GDmdw5V2hEgrtrAey+IS34tUFh9WznRjSzuBfBkWXG8orMfyAcbKT1k+
        7MHUZmxph+DCAXzpeVgRh6s91NDQcBfSWHzUr3s0M4Qr7QjyCGBDldjyef5IXQcTuVQBW7u3Ya9VUPY2
        0+5hkYL1uMJTK1k5fQVb3AkiP8PCFv67qSieelTdfpTjKyNPPs1FU24ihP2NnOjN4UUWgSg0ocpLJ1y7
        dw0rCSNYoQWAezoLDyvV6FZLL64O1/1QxA9XLqWXwwGFp+GHFWVa1y9Ht1jacUXLH2ZF7+tQ7ihcyWvw
        g5jRhEX+BpTtY0VhhyvMr0T/5M7M6s9X3+tudT+2NrZhGRrR0NCYSVnZv9FdFkfuPtDNAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>