<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEstadistica.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAMCAgICAgMCAgIDAwMDBAYEBAQEBAgGBgUGCQgKCgkICQkK
        DA8MCgsOCwkJDRENDg8QEBEQCgwSExIQEw8QEBD/2wBDAQMDAwQDBAgEBAgQCwkLEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBD/wAARCAA+AD4DASIAAhEBAxEB/8QA
        HAAAAQUBAQEAAAAAAAAAAAAACAAEBgcJBQED/8QAPhAAAQMCAwQFBwkJAAAAAAAAAQIDBAAFBgcREiEx
        QQhCUWFxExQiMnWBsxYYNjdTYpGU0iNSVIKiscHh8P/EABoBAAIDAQEAAAAAAAAAAAAAAAYHAgMFBAj/
        xAAxEQACAQMCBAIHCQAAAAAAAAABAgMABBEFBiExQVFhoQcSEyJx4fAUIzJCUoGCscH/2gAMAwEAAhED
        EQA/ANPaVKh66T/Seayja+R+EUMysVS2fKKcXopu3Nq9Va09ZwjelJ3aaE7tAqyKJpm9ROdRZggyauLG
        WY2BsvYgm4zxRb7UhQJQl90Bxzj6iB6SuB4A1D8vOkpllmli5WDsGyLlKlIiuSy+5ELTOwgpB3qIVr6Q
        6tZo3/EV9xVdX75iS7SrlPkq2nZElwrWru1PAdgG4cqvnoI/Xa/7DlfEarTk05IoS7HJArnWcswA5UYy
        M98uxdn7NNuEiC/HfXHWqQwQjaSopJ2k6gDUcTpU5t9yt92ionWucxLjub0usuBaT7xQR4x+l189pSfi
        qr74PxziPA9xTcLDOU2NoF2OoktPDsWnn48RyNLeHcskcpS4UFc8xz+flTgu/R9BNbCWxkIcgHDcQeHf
        GR50b1Kotl3mBa8w7Em6wQGZLRCJcUq1Uyv/ACk8QefiDUpotilSdBJGcg0sLm2ls5mgnX1WU4IqO5iY
        xiZfYHveM5rflG7TDckBvXTyiwNEI1+8opHvrJ/EN+umKL5PxHe5S5E+5SFyZDqjqVLUdT4DkByAAo/u
        nPcnYGRxjNuKSLjeIkZYHWSA47oe7VoH3VnjRDpcYEZfqTWXctlsUqIroI/Xa/7DlfEaodaJXoGWm5v5
        tz7yzBeXBiWd5l+QE/s23FuN7CSe07KtB3Guq74QN8Kqi/GK7GMfpdfPaUn4qq49XPiDo74+ul+uVyjP
        2kMy5jz7e1IUDsqWVDX0OOhph82nMT+Is/5lf6KR0ul3pkYiM8z0r0rbbk0lYUVrhcgDr4VG8osZPYLx
        tCll0iHMWIkxJO4trIG1/KdFe49tGTxoWvm05ifb2f8AMr/RRN2lqWxaobM8pMluO2l4oOqfKBICtDzG
        utE+3o7m3R4Z1IHMZ86XW+rjT76aK6s5FZiCGx4cj/Yqlemjh6Tfsibk/Fb21WiZGuKhz2EqKFH3Bwnw
        BrOGthb3ZrdiKzTrDd46X4VxjuRZDSuC21pKVD8DWd0HokZhz84JuW3m6mLdBcD7t4UglgQlE7DiT1lq
        A02Bv2goHcCaO9OuESNkc4xxpbXCEsCKh2SuSmKM6sTps1lbMe3xildxuK06txWyf6lnQ7KRx47gCQaE
        3FOFcj7NDy5ypgRx5gsKnSFpC/KODTb21ddxWnpHgkbhppoG99vmFcnsLt5V5UNJjlgFM6akhThcI0US
        vrOnmrgngNNNE1OSVEqUSSd5J50PavrDTN7KE4AoY1XV/s+be1PvdW7eA/00SzdyjZpYfF8wpcpEO6Rk
        hMiIJCk6H90gHTt2Vc+fdAXrtiCM8uPIulwbcbUUrQp9YKSOII1qvcL4ou+Ebs1eLNILbqNy0Heh1HNC
        hzB/2N9XstFizasfyhw7sMXhhITJjKICirT1Vdv3Vc+B7k/vfac+tRtqOlMVnUe8gJAcDqo/X4fm+PM4
        2bu6K4As73Geh+unft8OUKReb66tLbd2nKUshKQJC95PvogbeyuNAjR3VKUtplCFKUdSSEgEk86qTLrC
        UqfffPbhGW3HtrnphY01eHBOncd58B21cVXeiDS7yG0m1G8LfeEKoYnkucnj3Jx/GiDctxE0qwRY93ic
        eP150qZ3qA/dbVKt0a4PQXJDZQmQzptt68xr/wB4U8pU4iMjFDDKGBU9aFDF2VmMcKPrXKt7k2KVHZlx
        klxJHaocUnx/E1DyCNxo3650rDeHZyiubYbdIUd5LsVCyfxFZcmmAnKNihO42sjNmB8DsRnzoM2WXpDi
        WY7S3XFHRKEJKifACrfyiy0x1CvMfEbzzlkipA20uJ1ckIPFBbPAHtVvHEDWrzhWi027fb7XEi6/YsJR
        /YU7qcOnLGwZmzj9qvsttpbyCWVySO3D514EpTrspA1Op0HE17SpVogAcqJq/9k=
</value>
  </data>
</root>