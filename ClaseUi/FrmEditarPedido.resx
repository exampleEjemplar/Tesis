<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEstadistica.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAD4AAAA+CAYAAABzwahEAAAAIGNIUk0AAHolAACAgwAA+f8AAIDoAABS
        CAABFVgAADqXAAAXb9daH5AAAAAJcEhZcwAAD0YAAA9GAWhTIIIAAArBSURBVGhD5Zp7cFTlGYff0TKO
        iLZOK2GTiKCgFOutOtgWoVGHP5xiIdk9e81m9+wmgSi5bZK95MKes3t2E6zBqnipU63FttripSpioKjJ
        ORsCCAlYsNUWsVivM2R3kxQtUk7fbxOc7e4LJmE3MM0fzxz4ASfvk+97v8sSUFV1UkKGkwEynAyQ4WSA
        DCcDZGi3CyTFxQJ4PQLYKgQoKhFAXyICZ/eDlg/C0op2KOQlKLSHQW/zg84hAGfzX2xwBG5CTDreH9DZ
        hec4u7Cv0CYuKuFXw8eeYhjymRbFvab9Ma/5hajHLEU9lpJ+j2UBZt+KuQ0Q85hhwGuFmM8KX9bcCXG3
        CeIeEwzgn/X78Omyg1ppATW4EFShgIZwJENKmvF14sv5ECy3tzLxH+p4oV5vF3aiqJoKit8+LG5FcfPt
        KK2mgnLbYx5jA4ovPKvFf3LXfaC1B6xae/CPKHc0VTYZFL81SfxWSjyJY3GvZWPUW2w8Vr30bBIXQGcX
        b9Q6pBf0dr/KSBVNZYziXzHoNryAz5uZ/JkWn4YiAjKI05uUpBiveNRnYc8hFL8XxaeeKfE8vU3sosS+
        jvGKJ4PTfWvUZ8yfEHELijc3CuCoEG5C8XcoqdGQCXEGjvi7A7W2H6l3F2dK3J/CiLwNpcuFQqNDiOps
        tNRoyJQ4I9pQMviFm9OrgVtQ8sc0hCMZGgy/GeG3w08r7s0lfsDt6Q4c6aPa05BmZFScPRuNR+KNhsUD
        jXoYauTSoBzJUKd7boTnh5/WVnYYydHahXcpkbGSSfET9Hutb0d9xTlxnwVSoRzJkOP+MMKG4ae19Ru4
        am+mJMZDNsQZcZ9ZHvSZpg3gao+//wrKkQx1ug0jPAscwxZu5/jVpMR4yJY4A6d++2CjGY6u1sPRlmEo
        RzIsczyeoLz0STDa2hdq7ZmTZmRT/LDH8sVQk/kGNaAFVWToSEcydFQ8DHzFI1C28mEw8eLLWlsLKTBe
        simOFxwVp/tLxwQ9HBMMCShHMlxSsw5udz0KPy1vu81Q0vw5VfzpkE3xBB7Tl9HmkuX9ASf0izzpSIaF
        ZW2wvHzNFK0zuHEsR9HRknVxhs+yOdZScm6s2Uo6kiFnawGDrWUhSh+nCj9dJkTcazoadZuv63ePZVV3
        +AHv0x6q6EwwMeKs3821h91j2Md19sAUvU3I2L6dykSJ46hHol7j+ZRjWsC407nmKs7uP0IVnQkmTpxt
        b9x1lGNawNDagjxVcKZA8YKJEo+5zTrKMS1gYHFrU4vNJBM54oiPckwLGHgLW08VnClSxMkPGzOGx/w0
        5ZgWMFA8awsbI0W8IKnQ4xkGz+6WHsoxLWBwNmEvVXCmQPElNttqwO0GhppM34x5LItj7uICZFGGKYi6
        ixdQjmkBA4v7NLXYjMA+wOCFSJFFuHipIwBrq1yguowQ9RZDbDUHsWZ9xokilCMZYoHZEXcIO4sM/nx8
        gvMVCbybgvBJkx0Gnr4eoj05EOu8NCtQjmSIRb6VVvTpMDzSvYWccJnO6oeqV1F6VwDMkUdgfQ+OyDaA
        w915V8a25ZiQpcgdGeJOZAnlmBYwsMg/kQLjIfH5nLij0CDm6GwiSofA3ReCutcFqJDvAY/sh4PKVXBc
        mXZ1tFvzl1hEo2aYf1KOaQFDZxeeJiXGAe4QkSKjeDHnDEDlxhDU7w5Dbad0Y60sPeeSg9c65PuhWg7D
        AWUeqN0X5Me6Z/QQxY+baESziXJMCxg63n8/JTFW9LywU8cJeXpehErs6YbdIZQOXVUrh/6KqEgfys8s
        k++DejkAB7pRPjI1r1/J3U5JjIe4ommnHNMCBmcNWiiRMeEQ+rQ6/2x9sQDV2NMNe1C6KzQL+fOI9Al2
        18ih6eXyWqhTgvC+MhdU5fxZ/ZG8vZTIWIkqM1ZRjmkBg+PWzuV4/xApNBp4sVdrFPI4lK7qkMCN0i5Z
        movS76RInwC/GVJ+KY78KrkNPlCuwJ6feinK91EyY6E/MuMWyjEtYHBWaQoKdKQJjQZe7NaaxG/rnSKs
        2oQ9jQtZbZd0LcodSJFNZR9O+zms5ytR/qByJU77C6fHIrndlNAo2YM9Po1yTAsYbCHi+EATKXYqeGEH
        Smu4UuzpjRLU9YagRpbmu+STjnQqvSh/ORv5OjkIByLfZfJ50UjeuBa8qJLrjyp5pCMZcs4W4BxNCzi+
        5UvcimjJVByJfXo2/n1cyILQ0CuhdGgW8hYheCp247TPYT3PFryDEbbgXYg9nz/maR9VNItRnnQkQ535
        QeQh4EraNnD2UXy0zAt9hXr/TO1ITzf0SWx6z0bp/YTYaNiD/1bDVvtquRUORXDBi0y7DHv+LUqQpDtX
        GejRTEVIRzLUFb0IuuWbQWt+aDHn8J7ykxjcqnYUGYVLcO+Hyk1SoqdrOqX5WPzfU2TGCuv52azn75bX
        4GqPPd994QwU2kGKJqNo/jOwLa9o8M18GNyRTzqSodP5S3A6HofSssfAyEsbtbaT/E8KL/ToTOJ0rlSA
        VdjT9Yl9Wroaix5tT38dbJ+f45R/Dvhr3OfnM3kN7s3bSGEE/0w9vD1v64d9+fBR7zCUIxneteIxuGvl
        L2DVyifAZG9dWFTSlPbDPHrsaa1BnDV8OAlCHUrXdIUuxwJT9+nTZRduhbllIz3/HlvwlAvYPt97MvG4
        /J2CT3sugc+2DUM5kqG9/MEE/Ip1YHC2gtYhev9HnBf2FLGFrATP3h24kO3BhawrNBMZ60I2Wnqx53OY
        PD5xn2eHnKmzUX5fsnS0O1eNd01fpz6DXskQjmSoLQ8nKCoPAbdiDXDlbewnm54fvnAkrpa5TLq6IwQN
        e5m0xI6hf0spNtPgQildxqY96/l/yHNwwcOzfSR3d0IcRzoaye2Md15ynvp79EqGcCRDJpqMrqwVz+/i
        PLxwPIEnsiv0Tly9X0HpvjCTZj39bkqR2WLviUNOFa727yW2ummaeETzdqxb81GsR3PpgIxTewN6JUM4
        kuFJxEFvE8CwAnv6Jbxa9rbiMTQ0p1aR9hEFZpPdKD+zFKc9Pod7futF1/3r4EUFx/99DjDUz9ErGcKR
        DClxDo+gy5b6YeWvJPDsa8MvGr4G6SMKmwjwkBOa7sR93oUL3v4t34ejH5yHtTMfinRHMqTEi8wiWOrw
        prUFz9/b8U7dFXoxpZiJ5lC1HPqeUX4EWrfUgXooVTaZdEcypMSXFYqw4rEAePZjX7/Bbls44kr4d0RB
        E0S4s0oOz7LKD8IDWyqyJ75cK0Lp/YHEgoajjZeIVqjuks6p6hRrXV2hoZrXqOIyC25l+JQG65XW6nql
        bUqlHIYzIl7VJUFlpwj1kdAPXH3hZ3yvNQ80vtakVittaUWPF/Yu9k7f681HXErr8yh+E4oDiuP19UyK
        v4HZLglC8UYw9j65iNv71Hrv6y1fDI/O6cPexd5p2PPr26StjeDCr3n2iL8pwdqPq+HaD3fBlZ/tA+nV
        mpvZdMQ+fNalBOMuRSKlaNjflY7gN26jqyvsDeK75uE7r/m4F9pfrTr7xO/9pBZufl+B6z/cCYHNdeCO
        tEH9tsC5jk2PXrGi44FlDREhhGfux2tk6eVaJfQmSn4wAh5Hw5vw+VRdp3RPZaS98O6etXNrO4PnuTrD
        IHbUwQ34zgWHuuFnHbXZFZ8MkOFkgAwnA2Q4GSDD/39U+C+GQJGxAqA/4QAAAABJRU5ErkJggg==
</value>
  </data>
</root>