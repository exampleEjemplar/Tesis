<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAABDFJREFUaEPt
        mk1TE3cAhzn3E/TU79CL7a300hsdcbSUatvpdHQ6KuqgBDk4lTpm6JQSNICBikAgMYoZQwobA9piiARD
        XskLARJLpgHTpBgJRq0D/Jr/skQ3rpMNhOwe+M08FzbLPs/ubE4p2Z1Y1nZBW9Uu1Y3wRS7tN134uS/6
        U6NqqRDUN/YtNUjVU7+evf4ho5Tfrly8fSfoS+JdBJxPMT68mEHeQcH7VxTheLIgzMeWIevUQSkzzDdJ
        VHsYLf7LN0DWPsgpsh3a+gyY9TzdWoRYAsi1thRRjADDAyfO/nI1gy0QZh3fDCDkHSG2AEJeEWIMIPCO
        EGsAgVeEmAMIOSPEHjDniMFzuQem70+k7h/4Rm4rK3uPUd+YmAMCIx54fqjC0vnzSDU2In7u3Lp73z6/
        tbT0fUa/OAGBSJyW3iT0OME6zhUwMWhFl/QyVtLiL2SyDCsNDXCWl1OMfnECcpEdYLNGcFVNYdQ+B9UV
        JVJvBBB8lZUBRj93wLQrwQq41DGEUPQJp8hWaVEOZa5nMU3iN40evkgSM49TGHOF3orwVlR4Gf3cAQSH
        OQbraJSG0k+jqWMA8q6hbdHaQ6Gt14A2JQXVLTN9HeuYHa1KTUZ+kzFHEOq2HjoiUV+/5ty7t5vR5xdQ
        DPw2P+zUGfQPqGFyBlkBdITrEfpaumEvL3exvonEEEDkHdRprMW7sbbUi/7fNTC5Q6wAezCGlubOVeWR
        kx8w6hsTOuBNeTzppaEj9NczT8IRikOhNkIu1d5jtF9PyAD/pBdOqpolnx1htHjQ2q2EzxkFcWW0X0+o
        AK47n00qokBvTzM8tjB9Du8A8j08MR7eMcZHJ2Ab5L7zm7xYUGBSfwYz7sWMF++AzhtGWJz+HWHc8ids
        Q6dyyo/ePIpZ9wLLi3eAeuA+dmLPEmF47kpyyruNEmh0d1hOBEEDiPyUsRqr8S5OcQKRd6XlX71cph2y
        vQQL4CtP7jyRJxNNQDRsz1ueTBQBiyELHmq/zSHf/pY8WcEDZtP/Px/s3oeY4CE/aZAgEE+fkDVBn8Cr
        /55j+Np3mKIOc4oTNu58bfrOJ5mz2BM0YMp8E49GahEaPo6Z0VNYjV3LS55MuID1dRi7TiLluEjzj7kO
        HuoIS35MfQgvnyeYE7gnWMDfc5Nw605nAghz6SfhHzmGlXk5zJqvsZJYYD797hU8gOtF5aKm+jAWTD+y
        AgjhezX4o2c/vJFFzvOyJ8gTCM748NGnZTh46EtEzfW0eGi4FneVJ/BA34TUcoz5ZO4JElBXcwx7Ssto
        vqg4AJ3iKFwmNf2tlO+KHvBsJYlPPvscH6flvzpYidtaVfp9XmeO5r+iB9xQd6FOUoXg3DTzl+2t4AFc
        L14hyV7Rn0Chtxsg9HYDhB7vAK6fGjTLb4WbFdp/BSXtkO1FXBnt3Qm8kpL/AfkTS5gCokOkAAAAAElF
        TkSuQmCC
</value>
  </data>
  <data name="btnBuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>