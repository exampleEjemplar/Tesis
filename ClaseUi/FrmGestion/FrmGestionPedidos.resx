<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAN0AAADdAAAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AHgEHrt3BB7vdwQe73cEHu93BB7veAQe7ngEHu54BB7ueQQe7XkEHu15BB7teQQe7XgE
        Hux4BB7seAQe7HgEHux4BB7reAQe63gEHut4BB7reAQf6ngEH+p4BB/qeAQf6ngEHul4BB7peAQe6XgE
        Hul4BB7oeAQe6HgEHuh4Ax2TeAQe+HgEHv94BB7/iR4325k5UMiZOVDImDlPyZg5T8mYOU/JmDlPyZg4
        TcmYOE3JmDhNyZc4TcqXOE3KlzhNypc2TMqXNkzKlzZMypc2TMqXNkzKlzZMypc1SsuXNUrLlzVKy5c1
        SsuVNUvLlTVLy4gdNd14BB7/eAQe/3gEHv94BB74ghUv5XoHIfl7CiX0v3iJxsyMm//MjJv/zIyb/8yM
        m//MjJv/zIyb/8yMm//MjJv/zIyb/8yMm//MjJv/zIyb/8yMm//MjJv/zIyb/8yMm//MjJv/zIyb/8yM
        m//MjJv/zIyb/8yMm//BeovIfAwl8noHIfmCFS/leAQe/3gEHvmeQVfFyIaU1IIVL+V4BB7/qVJmwMyM
        m/rMjJv/zIyb/8yMm//MjJv/zIyb/8yMm//MjJv/zIyb/8yMm//MjJv/zIyb/8yMm//MjJv/zIyb/8yM
        m//MjJv/zIyb/8yMm//MjJv8q1hqwHgEHv+CFS/lyIaU1J1AVsZ4BB7+eAQe+Z5CV8XMjJv/y4ua7ZQy
        SM14BB7/jytC0sqKmujMjJv/zIyb/8yMm//MjJv/zIyb/8yMm//MjJv/zIyb/8yMm//MjJv/zIyb/8yM
        m//MjJv/zIyb/8yMm//MjJv/zIqa6pMuRM94BB7/lDJIzcuLmu3MjJv/nUBWxngEHv54BB76nkJXxcyM
        m//MjJv/zIyb/a9cb794BR7+gREr6sWCkdDMjJv/zIyb/8yMm//MjJv/zIyb/8yMm//MjJv/zIyb/8yM
        m//MjJv/zIyb/8yMm//MjJv/zIyb/8aDk9KCFCzoeAUe/q9cb7/MjJv9zIyb/8yMm/+dQFbGeAQe/XgE
        HvqeQlfFzIyb/8yMm//MjJv/zIyb/8J9jcp+DibveQYf/LVmecDMjJv/zIyb/8yMm//MjJv/zIyb/8yM
        m//MjJv/zIyb/8yMm//MjJv/zIyb/8yMm/+3aXzAeQYh+34OJu/CfY3KzIyb/8yMm//MjJv/zIyb/51A
        VsZ4BB79eAQe+p5CV8XMjJv/zIyb/8yMm//MjJv/zIyb/8qJmOKMIjrXeAQe/5s8UcfMjJrzzIyb/8yM
        m//MjJv/zIyb/8yMm//MjJv/zIyb/8yMm//Mi5v0nD9UxngEHv+MIjrXyomY4syMm//MjJv/zIyb/8yM
        m//MjJv/nUBWxngEHv14BB77n0RYxMyMm//MjJv/zIyb/8yMm//MjJv/zIyb/8yMm/ehR13DeAQe/4Ya
        M9/JiJfbzIyb/8yMm//MjJv/zIyb/8yMm//MjJv/yoiX3IccNN14BB7/oUddw8yMm/fMjJv/zIyb/8yM
        m//MjJv/zIyb/8yMm/+dQFbGeAQe/HgEHvufRFjEzIyb/8yMm//MjJv/zIyb/8yMm//MjJv/zIyb/8yM
        m/+7cYLCeggh+HwKJPS+dofFzIyb/8yMm//MjJv/zIyb/8B3iMV7CiX0eggh+LtxgsLMjJv/zIyb/8yM
        m//MjJv/zIyb/8yMm//MjJv/zIyb/51AVsZ4BB78eAQe/KBEWMTMjJv/zIyb/8yMm//MjJv/zIyb/8yM
        m//MjJv/zIyb/8uLmeaNJDzWeAQe/3gEHv+oUWTBzIyb+syMm/qpUmbAeAQe/3gEHv+NJDzWy4qZ58yM
        m//MjJv/zIyb/8yMm//MjJv/zIyb/8yMm//MjJv/nUBWxngEHvt4BB78oERYxMyMm//MjJv/zIyb/8yM
        m//MjJv/zIyb/8yMm/++dYbEfQ4m8HkFH/7Gk5/ApVhqzXgEHv+PKUDSjylA0ngEHv+lWGrNxZGdwXkF
        H/5+Dibvv3iJxsyMm//MjJv/zIyb/8yMm//MjJv/zIyb/8yMm/+dQFbGeAQe+3gEHv2gRVrEzIyb/8yM
        m//MjJv/zIyb/8yMm//LjJvtmz5Sx3gEHv+KJjvl9Ortz//////////90Kiyv3kFH/55BR/+0Kiyv///
        //3/////9OnrzYgiOOd4BB7/nkJXxcyLmvDMjJv/zIyb/8yMm//MjJv/zIyb/51AVsZ4BB76eAQe/aBG
        WsTMjJv/zIyb/8yMm//MjJv/wn2NyoETK+l4BB7/un+Mw/7+/vL/////////////////////+fT21/n0
        9tf///////////////////////7+77NzgcZ4BB7/ghUv5cWBkc7MjJv/zIyb/8yMm//MjJv/nUBWxngE
        Hvp4BB7+oEZaxMyMm//MjJv/zIub9KNKX8J4BB7/hBsz7O7f48j/////////////////////////////
        /////////////////////////////////////////////+nV28SAFCvxeAUe/qpUaMDMjJv4zIyb/8yM
        m/+dQFbGeAQe+XgEHv6hR1zDzIyb/8aDktGEGDHieAQe/5lCVtX+/f3r///////////06+3t7Nvg5Ozb
        4OTs2+Dk7Nvg5Ozb4OTs2+Dk7Nvg5Ozb4OTs2+Dk7Nvg5PTr7e3///////////78/OWVOk/ZeAQe/4gf
        N9vIhpbZzIyb/51AVsZ4BB75eAQe/55BV8WrVmrAeQUf/XwMIvZ4BB7/wYqXwv//////////6dfc4XgE
        HvR4BB7/eAQe/3gEHv94BB7/eAQe/3gEHv94BB7/eAQe/3gEHv94BB7/eAQe9OnX3OH//////////8GK
        l8J4BB7/ewkh+XoHIfm1ZXjAnD9UxngEHvh4BB7/eAQe/3gEHv+ZRD/S6t6P23gEHv/BipfC////////
        ////////t3mHwqVYacClWGnApVhpwKVYacClWGnApVhpwKVYacClWGnApVhpwKVYacC3eYfC////////
        ////////wYqXwngEHv/q3Y7Xkzg513gEHv95BR/9eAQe+HgEHvd4BB7/sXFXxO/nlP3w55T4eAQe/8GK
        l8L/////////////////////////////////////////////////////////////////////////////
        ///////////////////BipfCeAQe//DnlPjv55T6pFhJyngEHv94BB7yeQUdYXgEHvV5Bx/8xpdrv+7m
        lPN4BB7/wYqXwv//////////////////////////////////////////////////////////////////
        /////////////////////////////8GKl8J4BB7/7+eU8L2HYsB4BR7+eAQe8HcDHlb///8AeQcbJngE
        H8h4BB7/kTQ32XgEHv/BipfC///////////y5unqgBIs03oIIuR6CCLkeggi5HoIIuR6CCLkeggi5HoI
        IuR6CCLkeggi5HoIIuSAEizT8ubp6v//////////wImWwngEHv+OLTPdeAQe/3cEHrx7ABod////AP//
        /wD///8AVQAAA3cEH3x4BB76eAQe/8GKl8L///////////jx8vOKJDvIgBIr1IASK9SAEivUgBIr1IAS
        K9SAEivUgBIr1IASK9SAEivUgBIr1IokO8j48fLz///////////BipfCeAQe/3gEHvZ3BR5tAAAAAf//
        /wD///8A////AP///wD///8A////AHYFHDZ4BB7/wYqXwv//////////////////////////////////
        /////////////////////////////////////////////////////////////8GKl8J4BB7/dwYeK///
        /wD///8A////AP///wD///8A////AP///wD///8AgAAgCHgEHv/BipfC////////////////////////
        ////////////////////////////////////////////////////////////////////////wYqXwngE
        Hv+AACAI////AP///wD///8A////AP///wD///8A////AP///wCAACAIeAQe/8GKl8L/////////////
        ////////////////////////////////////////////////////////////////////////////////
        ///BipfCeAQe/4AAIAj///8A////AP///wD///8A////AP///wD///8A////AG0AJAd4BB7+egch/HwM
        Jfh8DCX4fAwl+HwMJfh8DCX4fAwl+HwMJfh8DCX4fAwl+HwMJfh8DCX4fAwl+HwMJfh8DCX4fAwl+HwM
        Jfh8DCX4fAwl+HoHIfx4BB7+bQAkB////wD///8A////AP///wD///8A////AP///wD///8A////AHkF
        H2N4BB6weAQesHgEHrB4BB6weAQesHgEHut4BB7/eAQe/59QRs2nX03Jp19NyZ9QRs14BB7/eAQe/3gE
        Hut4BB6weAQesHgEHrB4BB6weAQesHkFH2P///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8AegAhF3gEHrR4BB7/iycx4ejZjdLo2Y3Siycx4XgE
        Hv94BB60egAhF////wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AHgFHmZ4BB70eQYf/XkG
        H/14BB70eAUeZv///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AHgH
        HCR4BB22eAQdtngHHCT///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A/////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAcAAAAPwAAAP8AAAD/AA
        AA/wAAAP+AAAH//gB///+B////w///////8=
</value>
  </data>
</root>