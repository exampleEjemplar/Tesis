<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBuscar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAF3SURBVFhHYxgFowAb6DrsmdR92OsqEP8B4v8UYpAZV7sOeSVAjccPuo94J6MZQDVMlCOACq+h
        a6QW7jnsfQVqDW4AVAgP9p23J/6/8GwLRRhkBsw8kNlQa3ADJMVgAz7+eEkRBpmBbCbUGtwAWfGQdcC7
        b0/hbLo7YP7+jv8NK5P+v/7yGMynqwPm7Wv9H9qtD8aNq1L+f/j+nHoOeP7hDopl6Bjkc5jlILziyESw
        OFUc8ODNlf/Zszz/z9rdiGIpDOOyHIQpdsB7YDAWzguAGz5nTzPRloMwVULg9L09/2MmWMAtgYXEggP4
        LQdhqjgAhNEdUbYojKDlIEw1B4AwuiMIWQ7CVHUACO+4sPR/WA/C8tl7mjDUIGOqOwCE152aBbTc4H/n
        hlys8siYJg4A4atPT2AVR8c0cwCxeEg6YMAbJKDGKLImauLLUGtwA1DDEYtGquCew16xUGvwA5AjQA1I
        oCaqNMtBZgGb+nFQ40fBKEACDAwAFDHed4D+vKkAAAAASUVORK5CYII=
</value>
  </data>
  <data name="ttpAdicionar.Text" xml:space="preserve">
    <value>En este campo, el numero que ingrese será lo que se adicione o incremente al precio existente de los productos. Ej. Si seleccionó un producto con $100 de precio e introduce 25, el nuevo precio será de $125</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATxwZAFEaGgBqMhwAYSstAG41IgBtOCIAcTciAHA5IgByOiYAdDonAHQ7KgB4OSsAeD0sAGw3
        OABuOj0Aej4yAHZBLgB4QS8AeUEyAHtEMwB7QTUAe0c2AHpJNQB+QzgAfUo5AGtLTAB4SkoAbVZWAH5Q
        UAB4UWQAgz86AIk9PQCERT0AgUo7AJ9LMQCAUT4AqGg/AIxHRQCCS0EAiUtEAI9HSACESEoAi09IAJJN
        TQCEUkEAiFFEAIxTSwCGWUkAil1NAJVTTwCEVlYAhFlWAIZaWgCLXV4Ak1FQAJlTVACQXlAAmlZYAJxZ
        WgCNYlEAkGZWAJRqWwCLYmIAhGlsAJtgYQCWbmAAnWloAJhxYgCdd2kAnnhqAJpwdACbd3gAn3p6AKFj
        YgCmbWoApm1tAKt5YgCgc2gAonltAK56bQC3eWcAp29yAKtycgChfnEAqHl0AKh9dQCieX4Aq3x4ALF0
        dACzeXkAXo57AFaTewBbk3sAYZF9AKmCewCqin4AvIlzALCFfgDAgmYAwINqAM6NawDEjXwAyI14AMOW
        fQCcf4IAon2AAGSVgQB6tZoAedWuAHnZsABZivgAjoOIAJ+EgQCckpUAo4SEAKuEgwCtjYEAooeKAKuL
        iwCxhIUAuISFALOKgwCyhokAs4iJALmMjACvkoYAtJeMALyVjACsj5AAuoyQAKKenAC8kpMAt5qRAIyj
        mACRqpwAtaSmALikqQC5r7AAvLW6ALi7vwDIk4QAwZSVAMWamgDJnJ0AzKaTAMugnwDTpZ8A1KicAMmd
        oQDFoqQAzKOiAMKtqgDMrKsA0augANKsrQDcrKsAw7SpAM+yrwDRsKoA3bKrAMSsuwDarLIA36y9AMGz
        tADJs7MAxLO6AMm9uwDUsrEA2bS0ANW2ugDZs7kA07m4AN26uwD2u6gA4bS0AOC5twDiu7sA8LuwAN3W
        nADS+IIA4f+KANXfoADOyL4A3sC/ANHIvQDjwL0AgZvxAJyu7ADfu8EA07PIAMK43gDjvMMAu8fCAKHl
        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
        B///gA///+Af////P///////
</value>
  </data>
</root>